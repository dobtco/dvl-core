/* ================================================================== *
   Forms ($forms)
\* ================================================================== */
form {
  margin: 0;
}
/**
 * 1. Address `margin` set differently in Firefox 4+, Safari 5, & Chrome
 * 2. Correct `font-size` not being inherited in all browsers
 * 3. Correct `font-family` not being inherited in all browsers
 */
button,
input,
select,
textarea {
  margin: 0; /* 1 */
  font-size: 1rem; /* 2 */
  font-family: inherit; /* 3 */
}
/**
 * Address Firefox 4+ setting `line-height` on <input> using
 * `!important` in the UA stylesheet
 */
button,
input {
  line-height: normal;
}
/**
 * Fix inconsistent `text-transform` for <button> and <select>
 * All other form control elements do not inherit `text-transform`
 */
button,
select {
  text-transform: none;
}
/**
 * 2. Improve usability and consistency of cursor style between
 *    image-type <input> and others
 * 3. Correct inability to style clickable <input> types in iOS
 */
button,
input[type="reset"],
input[type="submit"] {
  cursor: pointer; /* 2 */
  -webkit-appearance: button; /* 3 */
}
/* Reset default `cursor` for disabled elements */
button[disabled],
html input[disabled] {
  cursor: default;
}
/* Remove default <fieldset> styles for all browsers */
fieldset {
  margin: 0;
  padding: 0;
  border: 0;
}
/* Make most inputs, select boxes, and textareas as `block` elements */
input,
select,
textarea {
  display: block;
  width: 100%;
  vertical-align: middle;
  .error & {
    border-color: $errorColor;
  }
  &:focus {
    outline: 0;
    border-color: $primaryColor;
  }
  &[readonly], &[disabled] {
    border-color: #ccc;
    color: $darkGray;
    background-color: $lightestGray;
  }
}

input,
textarea,
.styled_select {
  border: 1px solid $gray;
  padding: $inputPadding;
  border-radius: $radius;
  color: $darkestGray;
}

label {
  color: $darkerGray;
  @include font_smoothing;
}

// Heights & sizes

input[type="text"],
input[type="email"],
input[type="search"],
input[type="password"],
input[type="url"],
input[type="number"] {
  height: $inputHeight;

  &.large {
    font-size: 1rem * $ratio;
    height: $inputHeight * $ratio;
    padding: $inputPadding * $ratio;
    @include font_smoothing;
  }
}

textarea {
  line-height: $lineHeight;

  &.large {
    padding: $inputPadding * $ratio;
    font-size: 1rem * $ratio;
    line-height: $rhythm * 5;
    @include font_smoothing;
  }
}

/* Make checkbox, image, and radio inputs `inline-block` by default */
input[type="checkbox"],
input[type="image"],
input[type="radio"],
input[type="file"] {
  display: inline-block;
  width: auto;
  cursor: pointer;
  border: 0;
}
/**
 * 1. Address `box-sizing` set to `content-box` in IE 8/9
 * 2. Remove excess padding in IE 8/9
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box; /* 1 */
  margin: 0;
  padding: 0; /* 2 */
}
/**
 * 2. Address `appearance` set to `searchfield` in Safari 5 and Chrome
 */
input[type="search"] {
  -webkit-appearance: textfield; /* 2 */
}
/* Remove decoration & cancel button in Safari 5 and Chrome on OS X */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}
/**
 * Make button, reset, and submit inputs to be `inline-block`, unless
 * otherwise specified by `.button` classes
 */
input[type="button"],
input[type="reset"],
input[type="submit"] {
  display: inline-block;
  width: auto;
}
/* Remove inner padding and border in Firefox 4+ */
button::-moz-focus-inner,
input::-moz-focus-inner {
  padding: 0;
  border: 0;
}
/* Give labels a pointer cursor by default */
label {
  cursor: pointer;
}

/**
 * 1. Remove default vertical scrollbar in IE 8/9
 * 2. Improve readability and alignment in all browsers
 * 3. Restrict <textarea> elements to vertical resizing only
 */
textarea {
  overflow: auto; /* 1 */
  vertical-align: top; /* 2 */
  resize: vertical; /* 3 */
}

label.required > abbr {
  color: $errorColor;
  font-size: $fontSmaller;
  position: relative;
  top: -0.25rem;
}

select.datetime {
  width: auto;
  display: inline;
}

// Checkbox and radio inputs

.control_styled {
  width: $rhythm * 3;
  height: $rhythm * 3;
  display: inline-block;
  border: 1px solid $darkGray;
  position: absolute;
  top: $rhythm / 2;
  left: 0;
  user-select: none;
  background: #fff;
  &:after {
    position: absolute;
    display: inline-block;
    opacity: 0;
  }
}

label.control {
  display: block;
  color: $darkestGray;
  @include font_smoothing(off);
  position: relative;
  padding: $rhythm / 2 0;
  padding-left: $rhythm * 5;
  input {
    opacity: 0;
    position: absolute;
    top: 0;
    left: 0;
    &:focus + .control_styled {
      border-color: $primaryColor;
    }
    &:hover + .control_styled {
      background: $lightestGray;
    }
    &:active + .control_styled {
      background: darken($lightestGray,3%);
    }
    &:checked + .control_styled:after {
      opacity: 1;
      transform: scale(1) translateZ(0);
    }
    &[readonly],
    &[disabled] {
      + .control_styled {
        opacity: 0.6;
        background: $lighterGray;
      }
      &:active + .control_styled {
        background: $lighterGray;
      }
    }
  }
}


input[type="checkbox"] {
  + .control_styled {
    border-radius: $radius;
    &:after {
      position: absolute;
      font-family: 'FontAwesome';
      content: "\f00c";
      color: $primaryColor;
      line-height: ($rhythm * 3);
      width: ($rhythm * 3) - 0.125rem; // Subtracting widths of border
      text-align: center;
      display: inline-block;
      opacity: 0;
      transform: scale(0.5) translateZ(0);
      transition: opacity 120ms $easeInOutBack, transform 170ms $easeInOutBack;
    }
  }
  &.readonly,
  &.disabled {
    + .control_styled:after {
      color: $darkGray;
    }
  }
}

input[type="radio"] {
  + .control_styled {
    border-radius: 50%;
    &:after {
      content: "";
      background: $primaryColor;
      width: $rhythm * 1.5; // Half the width of the button
      height: $rhythm * 1.5; // Half the width of the button
      border-radius: 50%;
      position: absolute;
      top: 50%;
      left: 50%;
      margin: ($rhythm * -0.75) 0 0 ($rhythm * -0.75); // Center within the input
      opacity: 0;
      transform: scale(0.75) translateZ(0);
      transition: opacity 200ms $easeInOutBack, transform 300ms $easeInOutBack;
    }
  }
  &.readonly,
  &.disabled {
    + .control_styled:after {
      background: $darkGray;
    }
  }
}

.control_minus {
  input[type=checkbox] {
    + .control_styled:after {
      content: "\f068";
      top: 1px; // alignment
    }
  }
}

.datetime_input_clear_wrapper {
  clear: both;
}

.datetime_input_clear {
  font-size: $fontSmallest;
}

form {
  .grid {
    margin-bottom: $rhythm * 2;
  }
}

// Form layouts

.form_item {
  margin-bottom: $rhythm * 2;
}

.form_item_horiz_label {
  margin-top: $rhythm;
}

.form_item_vert_label {
  margin-bottom: $rhythm;
}

.input_sub {
  margin-left: $rhythm * 3;
}

@media only screen and (min-width: $lapWidth) {
  .form_item_horiz_label,
  .form_item_horiz_input {
    display: inline-block;
    vertical-align: top;
  }

  .form_item_horiz_label {
    text-align: right;
    width: 25%;
    padding-right: $rhythm * 4;
  }

  .form_item_horiz_input {
    width: 75%;
  }

  .form_actions.horizontal {
    padding-left: 24.99999%;
  }
}

.form_error {
  font-size: $fontSmall;
  background-color: $errorColor;
  color: $white;
  padding: $rhythm $rhythm * 2;
  border-radius: $radius;
  display: inline-block;
}

.form_hint {
  font-size: $fontSmaller;
  margin: $rhythm 0;
  font-style: italic;
  color: $darkGray;
  max-width: 30rem;
  .control + & {
    margin: 0 0 ($rhythm * 2) ($rhythm * 5);
  }
}

// Input groups

.input_group {
  position: relative;
  display: table;
  border-collapse: separate;
  > .button, > .input_group_text {
    width: 1%;
    display: table-cell;
  }
  > input {
    display: table-cell;
    width: 100%;
  }
  .button {
    border-left-width: 0;
  }
  :first-child {
    @include border_right_radius(0);
  }
  :last-child {
    @include border_left_radius(0);
  }
}

.input_group_text {
  display: inline-block;
  margin: 0;
  padding-left: $rhythm * 2;
  width: 100%;
  color: $darkerGray;
  text-align: center;
  line-height: $inputHeight;
  @include ellipses;
}

form {
  /* Autosubmitter */
  .item {
    position: relative;
  }
}

.styled_select_wrapper {
  height: $inputHeight;
  width: 20rem; // 272px
  vertical-align: middle;
  &.auto {
    width: auto;
  }
  &.full {
    width: 100%;
  }
  select {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: $inputHeight;
    opacity: 0;
    z-index: 2;
    .error & + div {
      border-color: $errorColor;
    }
    &:focus + div {
      border-color: $primaryColor;
      &:after {
        color: $primaryColor;
      }
    }
    &:hover + div {
      background: $lightestGray;
    }
    &:active + div {
      background: darken($lightestGray,3%);
    }
    &[readonly],
    &[disabled] {
      + div {
        opacity: 0.6;
        background: $lighterGray;
      }
      &:active + div {
        background: $lighterGray;
      }
    }
  }
  &:hover .styled_select {
    background: $lightestGray;
  }
  &:active .styled_select,
  &.open .styled_select {
    background: darken($lightestGray,3%);
  }
}

.styled_select_wrapper {
  position: relative;
  display: inline-block;
  vertical-align: top;
}

.styled_select {
  display: block;
  height: $inputHeight;
  background: $white;
  border-color: $darkGray;
  @include ellipses;
  padding: 0 $inputHeight 0 $inputPadding;
  line-height: $inputHeight;
  color: $darkestGray;
  font-weight: $weightNormal;
  &:after {
    font-family: 'FontAwesome';
    content: '\f0d7';
    position: absolute;
    top: 0;
    right: 0;
    line-height: $inputHeight;
    width: $inputHeight;
    text-align: center;
    color: $darkerGray;
  }
}

a.styled_select {
  text-decoration: none;
}

.styled_select {
  cursor: default;

  + .dropdown_menu a {
    cursor: default;
  }

  &:focus {
    outline: 0;
    border-color: $primaryColor;
  }
}

.datetime_input_wrapper .input_group {
  width: $rhythm * 20;
  float: left;
  margin-right: $rhythm * 2;
}

// When replacing an input with text
.input_text {
  margin-top: $rhythm;
}

// Radio button groups (rating field)
.radio_group_inner {
  input {
    display: none;
    opacity: 0;
    &:checked + label {
      background: $linkColor;
      color: $white;
    }
  }
  label {
    float: left;
    width: 25%;
    height: 100%;
    text-align: center;
    border: 1px solid $gray;
    border-right-width: 0;
    padding: $rhythm 0;
    &:first-of-type {
      @include border_left_radius($radius);
    }
    &:last-of-type {
      border-right-width: 1px;
      @include border_right_radius($radius);
    }
  }
}

// Sub-option, conditionally visible
// Must set the left property each time this is used
// (Used in "max rating" when setting numeric ratings)

.form_option_sub {
  background-color: $lightGray;
  padding: 0.5rem 1rem;
  @include cf();
  position: relative;
  border-radius: $radius;
  &:before {
    content: "";
    width: 0;
    height: 0;
    border-style: solid;
    border-width: 0 8px 8px;
    border-color: transparent transparent $lightGray transparent;
    position: absolute;
    top: -8px;
    margin-left: -3px;
  }
  label, input {
    float: left;
  }
  label {
    line-height: 2rem;
    margin-right: 1rem;
  }
  @media screen and (min-width: $lapWidth) {
      margin-left: 8.3333% * 3;
  }
}

.microcopy {
  background: $lighterGray;
  span {
    font-size: $fontSmaller;
    display: block;
    + .button {
      margin-top: $rhythm;
    }
  }
  padding: $rhythm * 2;
  border-radius: $radius;
  max-width: 22rem;
}

