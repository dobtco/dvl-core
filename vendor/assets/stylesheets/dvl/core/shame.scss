// Rules
// 1. If itâ€™s a hack, it goes in shame.css.
// 2. Document all hacks fully:
//    - What part of the codebase does it relate to?
//    - Why was this needed?
//    - How does this fix it?
//    - How might you fix it properly, given more time?
// 3. Do not blame the developer; if they explained why
//    they had to do it, then their reasons are probably
//    (hopefully) valid.
// 4. Try and clean shame.css up when you have some down time.
//    - Even better, create an issue where you can allocate
//      some time for it.
//
// App-specific hacks are located in app/stylesheets/shame.scss within their respective repo


// Deprecated styles in Based.

// Build Helpers
//
// I'll be working towards removing all appearance classes
// like these from the codebase, via three methods:
//
// 1. Integrating the styles directly into the components they're applied to.
//
// 2. Reworking site-wide defaults so that these tweaks are no longer needed.
//
// 3. Converting these into mixins which we can use in the CSS, rather than
//    bloating the markup.
//
// -Josh


.margin_tn {
  margin-top: ($rhythm * 3) !important;
}

.margin_rn {
  margin-right: ($rhythm * 3) !important;
}

.margin_bn {
  margin-bottom: ($rhythm * 3) !important;
}

.margin_ln {
  margin-left: ($rhythm * 3) !important;
}

.margin_th {
  margin-top: ($rhythm * 2) !important;
}

.margin_rh {
  margin-right: ($rhythm * 2) !important;
}

.margin_bh {
  margin-bottom: ($rhythm * 2) !important;
}

.margin_lh {
  margin-left: ($rhythm * 2) !important;
}

.margin_tq {
  margin-top: $rhythm !important;
}

.margin_rq {
  margin-right: $rhythm !important;
}

.margin_bq {
  margin-bottom: $rhythm !important;
}

.margin_lq {
  margin-left: $rhythm !important;
}

.margin_td {
  margin-top: ($rhythm * 4) !important;
}

.margin_rd {
  margin-right: ($rhythm * 4) !important;
}

.margin_bd {
  margin-bottom: ($rhythm * 4) !important;
}

.margin_ld {
  margin-left: ($rhythm * 4) !important;
}

.margin_none {
  margin: 0 !important;
}

// Font sizes

.font_smaller,
.font_small {
  color: inherit;
  font-weight: inherit;
}

.font_smaller {
  font-size: $fontSmall !important;
}

.font_small {
  font-size: $fontSmaller !important;
}

// Floats

.align_left   {
  float: left !important;
}

.align_right {
  float: right !important;
}


// Text alignment

.text_left {
  text-align: left !important;
}

.text_center {
  text-align: center !important;
}

.text_right {
  text-align: right !important;
}

@mixin build_helpers($x: "") {
  @if $x == "" {
    .desk_show, .lap_show, .desk_show_i, .lap_show_i, .desk_show_ib, .lap_show_ib {
      display: none !important;
    }
  } @else {
    .#{$x}hide {
      display: none !important;
    }

    .#{$x}show {
      display: block !important;
    }

    .#{$x}show_i {
      display: inline !important;
    }

    .#{$x}show_ib {
      display: inline-block !important;
    }

    th.#{$x}show, td.#{$x}show {
      display: table-cell !important;
    }
  }
}

@include build_helpers();

@media only screen and (min-width: $lapWidth) {
  @include build_helpers(lap_);
}

@media only screen and (min-width: $deskWidth) {
  @include build_helpers(desk_);
}

.none {
  color: $darkerGray;
  @include font_smoothing;
}
.yes {
  color: $successColor;
}
.no {
  color: $errorColor;
}

// Hide from screen readers and browsers
.hidden {
  display: none;
  visibility: hidden;
}

// Visually hidden, available for screen readers - http://cbrac.co/TUcUgH
.visuallyhidden {
  position: absolute;
  overflow: hidden;
  clip: rect(0 0 0 0);
  margin: -1px;
  padding: 0;
  width: 1px;
  height: 1px;
  border: 0;
  // Add keyboard navigation - http://cbrac.co/RR8gO6
  &.focusable {
    &:active,
    &:focus {
      position: static;
      overflow: visible;
      clip: auto;
      margin: 0;
      width: auto;
      height: auto;
    }
  }
}

.cf {
  @include cf();
}

// Legacy styles to remove incrementally

a.smallbold {
  font-weight: $weightBold;
  font-size: $fontSmaller;
}

a.muted {
  color: $darkerGray;
  text-decoration: underline;
  &:hover {
    text-decoration: none;
  }
}

// Replace this with an icon-specific class
// or remove it altogether, recommend the use of smaller icons instead
a.subtle_icon {
  color: $darkerGray;
  text-decoration: none;
  &:hover {
    color: darken($darkerGray,5%);
  }
}

// Convert this to a fieldset

.form_item_two_inputs {
  input {
    width: 48.75%;
    display: inline-block;
    &:first-child {
      margin-right: 2.5%;
    }
  }
}

// Remove .form_actions class from other repos

// 2. Make .pagination_center the default, add .pagination_left if necessary

// The most common modifier, used underneath tables of results and the like
.pagination_centered {
  margin-top: 2rem;
  text-align: center;
}

// Convert checkbox and radio inputs to fieldsets

// Change all .dropdown_headers, they're not semantic.
// Use .dropdown_menu h3 instead

.dropdown_header {
  background: $lighterGray;
  color: $darkestGray;
  padding: $rhythm $rhythm * 2;
  font-size: $fontSmaller;
  text-transform: uppercase;
  letter-spacing: $letterspaceSmaller;
  &:first-child {
    @include border_top_radius($radius - 1);
  }
}

// Remove this, refactor .nav_dropdown so that it's not needed

.drop_sng {
  @include ellipses;
}

// Keep and rename to .drop_unread

.drop_important {
  font-weight: $weightBold;
}

// Remove the need for this

.dropdown_nav {
  li a,
  .drop_sng {
    padding: 0 1.5rem;
    line-height: 3rem;
    height: 3rem;
    @include cf;
  }
  .all {
    .drop_rt_item,
    .drop_rt_arrow {
      width: auto;
      float: none;
    }
    .drop_rt_item {
      max-width: 87%;
    }
    .drop_rt_arrow {
      max-width: 10%;
    }
  }
}

// Switch to filtering sidebar

.sidebar_nav.condensed > li {
  > a,
  .content {
    padding-top: $rhythm;
    padding-bottom: $rhythm;
  }
  .badge {
    top: $rhythm;
  }
}
